[1mdiff --git a/+pds/+datapixx/TTL.m b/+pds/+datapixx/TTL.m[m
[1mindex df121c4..b24a5dd 100644[m
[1m--- a/+pds/+datapixx/TTL.m[m
[1m+++ b/+pds/+datapixx/TTL.m[m
[36m@@ -47,7 +47,6 @@[m [mif state == initialState[m
     warning(['TTL channel ' num2str(chan) ' attempted to be changed to ' num2str(state) ', but was already ' num2str(state)]);[m
 end[m
 [m
[31m-[m
 %% set the state oft the DIO channel[m
 if(nargout == 0)[m
     if(state == 1)[m
[36m@@ -71,6 +70,7 @@[m [melse[m
     else[m
         Datapixx('SetDoutValues', 0, chanmask);[m
     end[m
[32m+[m[41m    [m
     Datapixx('SetMarker');[m
 [m
     t(1)=GetSecs;[m
[36m@@ -89,11 +89,13 @@[m [mend[m
 % reset the channel to its initial state if a dur is specified[m
 if ~isempty(dur) && state ~= initialState[m
     WaitSecs(dur);[m
[32m+[m[41m    [m
     if(initialState == 1)[m
         Datapixx('SetDoutValues', chanmask);[m
     else[m
         Datapixx('SetDoutValues', 0, chanmask);[m
     end[m
[32m+[m[41m    [m
     Datapixx('RegWrRd');[m
 end[m
 [m
[1mdiff --git a/flow/Task_WaitFixStart.m b/flow/Task_WaitFixStart.m[m
[1mindex 5da9937..71fedf2 100644[m
[1m--- a/flow/Task_WaitFixStart.m[m
[1m+++ b/flow/Task_WaitFixStart.m[m
[36m@@ -35,7 +35,7 @@[m [melseif(p.trial.task.fixFix == 1)[m
         % Fixation has been held for long enough[m
     elseif(p.trial.CurTime > p.trial.stim.fix.EV.FixStart + p.trial.behavior.fixation.MinFixStart)[m
         % Transition to the succesful fixation epoch[m
[31m-        ND_SwitchEpoch(p,'Fixating')[m
[32m+[m[32m        ND_SwitchEpoch(p,'Fixating');[m
     end[m
 end[m
 [m
[1mdiff --git a/grfx/ND_FixSpot.m b/grfx/ND_FixSpot.m[m
[1mindex 11a5fd5..1f515fc 100644[m
[1m--- a/grfx/ND_FixSpot.m[m
[1m+++ b/grfx/ND_FixSpot.m[m
[36m@@ -3,9 +3,9 @@[m [mfunction p = ND_FixSpot(p, bool)[m
 [m
 if(bool && ~p.trial.stim.fix.on)[m
     p.trial.stim.fix.on = 1;[m
[31m-    ND_AddScreenEvent(p, p.trial.event.FIXSPOT_ON, 'FixOn')[m
[32m+[m[32m    ND_AddScreenEvent(p, p.trial.event.FIXSPOT_ON, 'FixOn');[m
 [m
 elseif(~bool && p.trial.stim.fix.on)[m
     p.trial.stim.fix.on = 0;[m
[31m-    ND_AddScreenEvent(p, p.trial.event.FIXSPOT_OFF, 'FixOff')[m
[32m+[m[32m    ND_AddScreenEvent(p, p.trial.event.FIXSPOT_OFF, 'FixOff');[m
 end[m
[1mdiff --git a/tasks/NHP_training/DelayedSaccade/DelSacc.m b/tasks/NHP_training/DelayedSaccade/DelSacc.m[m
[1mindex 30aa99e..6d7c6a9 100644[m
[1m--- a/tasks/NHP_training/DelayedSaccade/DelSacc.m[m
[1m+++ b/tasks/NHP_training/DelayedSaccade/DelSacc.m[m
[36m@@ -22,7 +22,6 @@[m [mend[m
 % At this stage, p.trial is not yet defined. All assignments need[m
 % to go to p.defaultparameters[m
 if(isempty(state))[m
[31m-[m
     % --------------------------------------------------------------------%[m
     %% define ascii output file[m
     p = ND_AddAsciiEntry(p, 'Date',        'p.trial.DateStr',                     '%s');[m
[36m@@ -75,17 +74,17 @@[m [mif(isempty(state))[m
     %% initialize target parameters[m
     p.defaultParameters.behavior.fixation.FixWin = 3;[m
     [m
[31m-    p.defaultParameters.task.RandomPos    = 0;[m
[31m-    p.defaultParameters.task.RandomPar    = 0;[m
[32m+[m[32m    p.defaultParameters.task.RandomPos = 0; % if 1, randomly change the grating location each trial[m
[32m+[m[32m    p.defaultParameters.task.RandomPar = 0; % if 1, randomly change orientation and spatial frequency of the grating each trial[m
 [m
     % define random grating parameters for each session[m
     p.defaultParameters.stim.GRATING.RandAngles = 0:15:359;  % if in random mode chose an angle from this list[m
[31m-    p.defaultParameters.stim.GRATING.sFreqLst   = 0.25:0.1:6; % spatial frequency as cycles per degree[m
[32m+[m[32m    p.defaultParameters.stim.GRATING.sFreqLst   = 1:0.2:6; % spatial frequency as cycles per degree[m
     p.defaultParameters.stim.GRATING.OriLst     = 0:15:179; % orientation of grating[m
     [m
[31m-    p.defaultParameters.stim.GRATING.PosAngle = datasample(p.defaultParameters.stim.GRATING.RandAngles, 1);[m
[31m-    p.defaultParameters.stim.GRATING.sFreq    = datasample(p.defaultParameters.stim.GRATING.sFreqLst,   1); % spatial frequency as cycles per degree[m
[31m-    p.defaultParameters.stim.GRATING.ori      = datasample(p.defaultParameters.stim.GRATING.OriLst,     1); % orientation of grating[m
[32m+[m[32m    p.defaultParameters.stim.GRATING.PosAngle   = datasample(p.defaultParameters.stim.GRATING.RandAngles, 1);[m
[32m+[m[32m    p.defaultParameters.stim.GRATING.sFreq      = datasample(p.defaultParameters.stim.GRATING.sFreqLst,   1); % spatial frequency as cycles per degree[m
[32m+[m[32m    p.defaultParameters.stim.GRATING.ori        = datasample(p.defaultParameters.stim.GRATING.OriLst,     1); % orientation of grating[m
 [m
 else[m
     % ####################################################################### %[m
[36m@@ -192,7 +191,7 @@[m [mfunction TaskSetUp(p)[m
     [m
     p.trial.task.centerOffLatency = ND_GetITI(p.trial.task.MinWaitGo, p.trial.task.MaxWaitGo); % Time from stim appearing to fixspot disappearing[m
 [m
[31m-    ND_SwitchEpoch(p, 'ITI')[m
[32m+[m[32m    ND_SwitchEpoch(p, 'ITI');[m
     [m
 % ####################################################################### %[m
 function TaskDesign(p)[m
[36m@@ -204,7 +203,6 @@[m [mfunction TaskDesign(p)[m
         case p.trial.epoch.ITI[m
         %% inter-trial interval: wait until sufficient time has passed from the last trial[m
             Task_WaitITI(p);[m
[31m-[m
         % ----------------------------------------------------------------%[m
         case p.trial.epoch.TrialStart[m
          %% trial starts with onset of fixation spot[m
[36m@@ -215,7 +213,6 @@[m [mfunction TaskDesign(p)[m
             p.trial.EV.TaskStartTime = datestr(now,'HH:MM:SS:FFF');[m
 [m
             ND_SwitchEpoch(p,'WaitFix');[m
[31m-[m
         % ----------------------------------------------------------------%[m
         case p.trial.epoch.WaitFix[m
         %% Fixation target shown, waiting for a sufficiently held gaze[m
[36m@@ -231,11 +228,10 @@[m [mfunction TaskDesign(p)[m
                     pds.reward.give(p, p.trial.reward.InitialRew);[m
                 end[m
             end[m
[31m-[m
[32m+[m[41m            [m
             % ----------------------------------------------------------------%[m
         case p.trial.epoch.Fixating[m
         %% Initial reward has been given (if it is not 0), now stim target will appear[m
[31m-[m
             % Still fixating[m
             if(p.trial.stim.fix.fixating)[m
                 % Wait stim latency before showing reward[m
[36m@@ -281,7 +277,6 @@[m [mfunction TaskDesign(p)[m
         % ----------------------------------------------------------------%[m
         case p.trial.epoch.Saccade[m
         %% Central fixation spot has disappeared. Animal must quickly saccade to stim to get the main reward[m
[31m-[m
             if(~p.trial.task.stimFix)[m
                 % Animal has not yet saccaded to target[m
                 % Need to check if no saccade has been made or if a wrong saccade has been made[m
[36m@@ -415,7 +410,6 @@[m [mfunction TaskDesign(p)[m
         % ----------------------------------------------------------------%[m
         case p.trial.epoch.TaskEnd[m
         %% finish trial and error handling[m
[31m-           [m
             Task_OFF(p); % Run standard TaskEnd routine[m
 [m
             % Grab the fixation stopping and starting values from the stim properties[m
[1mdiff --git a/tasks/NHP_training/DelayedSaccade/DelSacc_taskdef.m b/tasks/NHP_training/DelayedSaccade/DelSacc_taskdef.m[m
[1mindex b3ec4d7..33b0447 100644[m
[1m--- a/tasks/NHP_training/DelayedSaccade/DelSacc_taskdef.m[m
[1m+++ b/tasks/NHP_training/DelayedSaccade/DelSacc_taskdef.m[m
[36m@@ -23,11 +23,11 @@[m [mp.trial.task.ShowHelp = 0; % Moves the fixation spot towards target location[m
 p.trial.reward.GiveInitial = 0;     % If set to 1 reward animal when starting to fixate[m
 p.trial.reward.InitialRew  = 0.01;  % duration of the initial reward[m
 p.trial.reward.ManDur      = 0.1;   % reward duration [s] for reward given by keyboard presses[m
[31m-p.trial.reward.Dur         = 0.5;   % Reward for completing the task successfully[m
[32m+[m[32mp.trial.reward.Dur         = 0.05;   % Reward for completing the task successfully[m
 [m
 p.trial.reward.IncrConsecutive = 1; % use rewarding scheme that gives more rewards with subsequent correct trials[m
 p.trial.reward.nPulse          = 1; % number of reward pulses[m
[31m-p.trial.reward.PulseStep       = [2, 3, 4, 5]; % increase number of pulses with this trial number[m
[32m+[m[32mp.trial.reward.PulseStep       = [2, 4, 6, 8]; % increase number of pulses with this trial number[m
 [m
 % ------------------------------------------------------------------------%[m
 %% Grating stimuli parameters[m
[36m@@ -60,7 +60,7 @@[m [mp.trial.stim.GRATING.AngleArray   = 0:30:359;  %[m
 p.trial.stim.GRATING.RandAngles   = 0:15:359;  % if in random mode chose an angle from this list[m
 [m
 % grating contrast[m
[31m-p.trial.stim.GRATING.lowContrast  = 0.2;  % grating contrast value when stim.on = 1[m
[32m+[m[32mp.trial.stim.GRATING.lowContrast  = 0.5;  % grating contrast value when stim.on = 1[m
 p.trial.stim.GRATING.highContrast = 0.65;  % grating contrast value when stim.on = 2[m
 [m
 p.trial.stim.GRATING.res          = 300;[m
[36m@@ -72,14 +72,14 @@[m [mp.trial.behavior.fixation.MinFixStart = 0.1; % minimum time to wait for robust f[m
 p.trial.task.Timing.WaitFix = 2;    % Time to fixate before NoStart[m
 [m
 % Main trial timings[m
[31m-p.trial.task.stimLatency      = ND_GetITI(0.4, 0.4); % Time from initial reward to stim appearing[m
[32m+[m[32mp.trial.task.stimLatency      = ND_GetITI(0.5, 0.75); % Time from initial reward to stim appearing[m
 [m
[31m-p.trial.task.saccadeTimeout   = 2.5;   % Time allowed to make the saccade to the stim before error[m
[32m+[m[32mp.trial.task.saccadeTimeout   =  2.5;  % Time allowed to make the saccade to the stim before error[m
 p.trial.task.minSaccReactTime = 0.025; % If saccade to target occurs before this, it was just a lucky precocious saccade, mark trial Early.[m
 p.trial.task.minTargetFixTime = 0.25;  % Must fixate on target for at least this time before it counts[m
 p.trial.task.Timing.WaitEnd   = 0.25;  % ad short delay after correct response before turning stimuli off[m
[31m-p.trial.task.Timing.TimeOut   =  1.5;  % Time-out[s]  for incorrect responses[m
[31m-p.trial.task.Timing.ITI       = ND_GetITI(0.75,  1.25,  [], [], 1, 0.10);[m
[32m+[m[32mp.trial.task.Timing.TimeOut   =    2;  % Time-out[s]  for incorrect responses[m
[32m+[m[32mp.trial.task.Timing.ITI       = ND_GetITI(1,  2,  [], [], 1, 0.10);[m
 [m
 % ------------------------------------------------------------------------%[m
 %% Condition/Block design[m
[36m@@ -132,19 +132,22 @@[m [mc9.task.MaxWaitGo  = 0.95; % max wait period for fixation spot to disapear[m
 [m
 % condition 10[m
 c10.Nr = 10;[m
[31m-c10.task.MinWaitGo  = 0.95; % min wait period for fixation spot to disapear[m
[32m+[m[32mc10.task.MinWaitGo  = 0.95;  % min wait period for fixation spot to disapear[m
 c10.task.MaxWaitGo  = 0.105; % max wait period for fixation spot to disapear[m
 [m
[31m-p.defaultParameters.Block.Conditions     = {c1, c2, c3, c4, c5, c6, c7};[m
[31m-p.defaultParameters.Block.maxBlockTrials =  [3, 4, 4, 3,  2,  2, 1]; [m
[32m+[m[32mp.defaultParameters.Block.Conditions     = {c1, c2, c3, c4, c5, c6, c7, c8, c9};[m
[32m+[m[32mp.defaultParameters.Block.maxBlockTrials =  [1, 2, 3, 4,  4,  3, 3, 2,1];[m[41m [m
 [m
[31m-p.defaultParameters.Block.Conditions     = {c1, c2, c3,c4, c5};[m
[31m-p.defaultParameters.Block.maxBlockTrials =  [2, 3, 4, 3,   1]; [m
[32m+[m[32mp.defaultParameters.Block.Conditions     = {c2, c3, c4, c5, c6};[m
[32m+[m[32mp.defaultParameters.Block.maxBlockTrials =  [2, 3, 4, 3, 2];[m[41m [m
 [m
[31m-p.defaultParameters.Block.Conditions     = {c1, c2, c3};[m
[31m-p.defaultParameters.Block.maxBlockTrials =  [2, 3, 4]; [m
[32m+[m[32mp.defaultParameters.Block.Conditions     = {c9};[m
[32m+[m[32mp.defaultParameters.Block.maxBlockTrials =  5;[m[41m [m
 [m
 [m
[32m+[m[32m% p.defaultParameters.Block.Conditions     = {c1, c2, c3};[m
[32m+[m[32m% p.defaultParameters.Block.maxBlockTrials =  [2, 3, 4];[m[41m [m
[32m+[m
 % ------------------------------------------------------------------------%[m
 %% fixation spot parameters[m
 p.trial.stim.FIXSPOT.pos    = [0,0];[m
[36m@@ -165,5 +168,5 @@[m [mp.trial.task.breakFixCheck = 0.2; % Time after a stimbreak where if task is mark[m
 %% Trial duration[m
 % maxTrialLength is used to pre-allocate memory at several initialization[m
 % steps. It specifies a duration in seconds.[m
[31m-[m
 p.trial.pldaps.maxTrialLength = 15;[m
[41m+[m
[1mdiff --git a/tasks/NHP_training/InitFixTrain/InitFixTrain.m b/tasks/NHP_training/InitFixTrain/InitFixTrain.m[m
[1mindex 83d1cf0..de25f8e 100644[m
[1m--- a/tasks/NHP_training/InitFixTrain/InitFixTrain.m[m
[1m+++ b/tasks/NHP_training/InitFixTrain/InitFixTrain.m[m
[36m@@ -162,7 +162,7 @@[m [mfunction TaskSetUp(p)[m
     % Fixation spot[m
     p.trial.stim.fix = pds.stim.FixSpot(p);[m
     [m
[31m-    ND_SwitchEpoch(p, 'ITI')  % define first task epoch[m
[32m+[m[32m    ND_SwitchEpoch(p, 'ITI');  % define first task epoch[m
     [m
 % ####################################################################### %[m
 function TaskDesign(p)[m
[36m@@ -184,7 +184,7 @@[m [mfunction TaskDesign(p)[m
             p.trial.EV.TaskStart     = p.trial.CurTime;[m
             p.trial.EV.TaskStartTime = datestr(now,'HH:MM:SS:FFF');[m
             [m
[31m-            ND_SwitchEpoch(p,'WaitFix')[m
[32m+[m[32m            ND_SwitchEpoch(p,'WaitFix');[m
             [m
         % ----------------------------------------------------------------%[m
         case p.trial.epoch.WaitFix[m
[1mdiff --git a/tasks/revcorr_rfmap/RevCorr.m b/tasks/revcorr_rfmap/RevCorr.m[m
[1mindex af219dd..ba3f760 100644[m
[1m--- a/tasks/revcorr_rfmap/RevCorr.m[m
[1m+++ b/tasks/revcorr_rfmap/RevCorr.m[m
[36m@@ -261,7 +261,7 @@[m [mswitch p.trial.CurrEpoch[m
 %                          p.trial.CurTime - p.trial.EV.PlanStart)[m
 %             end[m
 %             [m
[31m-%             switchEpoch(p,'TrialStart');[m
[32m+[m[32m%             ND_SwitchEpoch(p,'TrialStart');[m
 %             [m
 %         end[m
         [m
[36m@@ -281,7 +281,7 @@[m [mswitch p.trial.CurrEpoch[m
         [m
         fixspot(p,1);[m
         [m
[31m-        switchEpoch(p,'WaitFix');[m
[32m+[m[32m        ND_SwitchEpoch(p,'WaitFix');[m
         [m
         % ----------------------------------------------------------------%[m
     case p.trial.epoch.WaitFix[m
[36m@@ -303,11 +303,10 @@[m [mswitch p.trial.CurrEpoch[m
                 [m
                 % Go directly to TaskEnd, do not start task, do not collect reward[m
                 fixspot(p,0);[m
[31m-                switchEpoch(p,'TaskEnd');[m
[32m+[m[32m                ND_SwitchEpoch(p,'TaskEnd');[m
                 [m
             end[m
             [m
[31m-            [m
             % If gaze is inside fixation window[m
         elseif p.trial.task.fixFix == 1[m
             [m
[36m@@ -317,7 +316,7 @@[m [mswitch p.trial.CurrEpoch[m
                 p.trial.outcome.CurrOutcome = p.trial.outcome.FixBreak;[m
                 % Turn off the spot and end the trial[m
                 fixspot(p,0);[m
[31m-                switchEpoch(p,'TaskEnd');[m
[32m+[m[32m                ND_SwitchEpoch(p,'TaskEnd');[m
                 [m
                 % Fixation has been held for long enough[m
             elseif (p.trial.CurTime > p.trial.stim.fix.EV.FixStart + p.trial.task.fixLatency)[m
[36m@@ -329,10 +328,9 @@[m [mswitch p.trial.CurrEpoch[m
                 p.trial.EV.nextReward = p.trial.CurTime + p.trial.reward.Period;[m
                 [m
                 % Transition to the succesful fixation epoch[m
[31m-                switchEpoch(p,'Fixating')[m
[32m+[m[32m                ND_SwitchEpoch(p,'Fixating')[m
                 [m
             end[m
[31m-            [m
         end[m
         [m
         % ----------------------------------------------------------------%[m
[36m@@ -415,7 +413,7 @@[m [mswitch p.trial.CurrEpoch[m
                 stim(p,0);[m
                 [m
                 p.trial.task.Good = 1;[m
[31m-                switchEpoch(p,'TaskEnd');[m
[32m+[m[32m                ND_SwitchEpoch(p,'TaskEnd');[m
                 [m
             end[m
                 [m
[36m@@ -425,7 +423,7 @@[m [mswitch p.trial.CurrEpoch[m
             pds.audio.playDP(p,'breakfix','left');[m
             [m
             p.trial.outcome.CurrOutcome = p.trial.outcome.FixBreak;[m
[31m-            switchEpoch(p,'TaskEnd')[m
[32m+[m[32m            ND_SwitchEpoch(p,'TaskEnd')[m
             [m
             % Turn off fixspot and stim[m
             fixspot(p,0);[m
[36m@@ -828,11 +826,6 @@[m [mend[m
 [m
 %% additional inline functions[m
 % ####################################################################### %[m
[31m-function switchEpoch(p,epochName)[m
[31m-p.trial.CurrEpoch = p.trial.epoch.(epochName);[m
[31m-p.trial.EV.epochEnd = p.trial.CurTime;[m
[31m-[m
[31m-[m
 [m
 function fixspot(p,bool)[m
 if bool && ~p.trial.stim.fix.on[m
[36m@@ -846,7 +839,6 @@[m [melseif ~bool && p.trial.stim.fix.on[m
 end[m
 [m
 [m
[31m-[m
 function stim(p,val)[m
 % Turn on/off or change the stim[m
 oldVal = p.trial.task.stimState;[m
[1mdiff --git a/trial_routines/ND_GeneralTrialRoutines.m b/trial_routines/ND_GeneralTrialRoutines.m[m
[1mindex 6c95c7a..eb1800a 100644[m
[1m--- a/trial_routines/ND_GeneralTrialRoutines.m[m
[1m+++ b/trial_routines/ND_GeneralTrialRoutines.m[m
[36m@@ -34,7 +34,7 @@[m [mswitch state[m
     case p.trial.pldaps.trialStates.frameUpdate[m
     %% collect data (i.e. a hardware module) and store it[m
         ND_FrameUpdate(p);[m
[31m-[m
[32m+[m[41m    [m
     % ----------------------------------------------------------------%[m
     case p.trial.pldaps.trialStates.frameDraw[m
     %% Display stuff on the screen[m
[36m@@ -42,7 +42,7 @@[m [mswitch state[m
         ND_FrameDraw(p);[m
 [m
     % ----------------------------------------------------------------%[m
[31m-    case p.trial.pldaps.trialStates.frameFlip;[m
[32m+[m[32m    case p.trial.pldaps.trialStates.trialCleanUpandSave;[m
     %% Flip the graphic buffer and show next frame[m
         ND_FrameFlip(p);[m
 [m
[36m@@ -59,7 +59,7 @@[m [mswitch state[m
     case p.trial.pldaps.trialStates.experimentAfterTrials[m
     %% AfterTrial[m
     % pass on information between trials[m
[31m-%              p = ND_AfterTrial(p);[m
[32m+[m[32m    % p = ND_AfterTrial(p);[m
 [m
 end  %/ switch state[m
 [m
[1mdiff --git a/trial_routines/ND_PrepSession.m b/trial_routines/ND_PrepSession.m[m
[1mindex 4f82061..b49c2ed 100644[m
[1m--- a/trial_routines/ND_PrepSession.m[m
[1m+++ b/trial_routines/ND_PrepSession.m[m
[36m@@ -19,21 +19,27 @@[m [mdisp('');[m
 if(strcmp(p.defaultParameters.session.subject,'mouse') || strcmp(p.defaultParameters.session.subject,'debug') || ...[m
    strcmp(p.defaultParameters.session.subject,'test'))[m
     [m
[31m-    if(strcmp(p.defaultParameters.session.subject,'mouse'))[m
[31m-    % Use the mouse as eyeposition[m
[31m-        p.defaultParameters.mouse.use = 1;[m
[31m-        p.defaultParameters.mouse.useAsEyepos = 1;[m
[32m+[m[32m    % right now, only 'mouse' triggers a special configuration[m
[32m+[m[32m    switch p.defaultParameters.session.subject[m
[32m+[m[32m        case 'mouse'[m
[32m+[m[32m            % Use the mouse as eyeposition[m
[32m+[m[32m            p.defaultParameters.mouse.use                     = 1;[m
[32m+[m[32m            p.defaultParameters.mouse.useAsEyepos             = 1;[m
[32m+[m
[32m+[m[32m            % Don't collect any analog channels[m
[32m+[m[32m            p.defaultParameters.datapixx.adc.PupilChannel     = [];[m
[32m+[m[32m            p.defaultParameters.datapixx.adc.XEyeposChannel   = [];[m
[32m+[m[32m            p.defaultParameters.datapixx.adc.YEyeposChannel   = [];[m
[32m+[m[32m            % p.defaultParameters.datapixx.adc.RewardChannel  = [];[m[41m  [m
[32m+[m[32m            p.defaultParameters.datapixx.useAsEyepos          = 0;[m
[32m+[m[32m            p.defaultParameters.behavior.joystick.use         = 0;[m
[32m+[m[32m            % p.defaultParameters.datapixx.useForReward       = 0;[m
[32m+[m[32m            % p.defaultParameters.sound.use                   = 0;[m
[32m+[m[32m        case 'debug'[m
[32m+[m[41m            [m
[32m+[m[32m        case 'test'[m
[32m+[m[41m            [m
     end[m
[31m-    [m
[31m-    % Don't collect any analog channels[m
[31m-    p.defaultParameters.datapixx.adc.PupilChannel     = [];[m
[31m-    p.defaultParameters.datapixx.adc.XEyeposChannel   = [];[m
[31m-    p.defaultParameters.datapixx.adc.YEyeposChannel   = [];[m
[31m-    % p.defaultParameters.datapixx.adc.RewardChannel  = [];  [m
[31m-    p.defaultParameters.datapixx.useAsEyepos          = 0;[m
[31m-    p.defaultParameters.behavior.joystick.use         = 0;[m
[31m-    % p.defaultParameters.datapixx.useForReward       = 0;[m
[31m-    % p.defaultParameters.sound.use                   = 0;[m
 end[m
 [m
 p.defaultParameters.DateStr = datestr(p.defaultParameters.session.initTime,'yyyy_mm_dd');[m
[1mdiff --git a/trial_routines/ND_UpdateTrial.m b/trial_routines/ND_UpdateTrial.m[m
[1mindex e5c8910..1415dbc 100644[m
[1m--- a/trial_routines/ND_UpdateTrial.m[m
[1m+++ b/trial_routines/ND_UpdateTrial.m[m
[36m@@ -43,7 +43,6 @@[m [mp.defaultParameters.EV.PlanStart = p.trial.EV.NextTrialStart;[m
 % If TDT times out, disable it until manually reneabled[m
 p.defaultParameters.tdt.use = p.trial.tdt.use;[m
 [m
[31m-[m
 % --------------------------------------------------------------------%[m
 %%  keep joystick center position[m
 if(p.trial.datapixx.useJoystick)[m
[36m@@ -74,7 +73,11 @@[m [mend[m
 [m
 % --------------------------------------------------------------------%[m
 %% Block control[m
[31m-p.defaultParameters.Block.EqualCorrect = p.trial.Block.EqualCorrect;[m
[32m+[m[32mp.defaultParameters.Block.EqualCorrect   = p.trial.Block.EqualCorrect;[m
[32m+[m[32mp.defaultParameters.Block.Conditions     = p.trial.Block.Conditions;[m
[32m+[m[32mp.defaultParameters.Block.maxBlockTrials = p.trial.Block.maxBlockTrials;[m[41m [m
[32m+[m[32mp.defaultParameters.Block.GenBlock       = p.trial.Block.GenBlock;[m
[32m+[m[32mp.defaultParameters.Block.BlockList      = p.trial.Block.BlockList;[m
 [m
 % --------------------------------------------------------------------%[m
 %% format string for ascii table[m
[1mdiff --git a/utils/ND_CheckFixation.m b/utils/ND_CheckFixation.m[m
[1mindex 3041bae..9d105c4 100644[m
[1m--- a/utils/ND_CheckFixation.m[m
[1m+++ b/utils/ND_CheckFixation.m[m
[36m@@ -42,8 +42,8 @@[m [melseif(p.trial.datapixx.useAsEyepos)[m
     sIdx = (p.trial.datapixx.adc.dataSampleCount - p.trial.behavior.fixation.Sample + 1) : p.trial.datapixx.adc.dataSampleCount;  % determine the position of the sample. If this causes problems with negative values in the first trial, make sure to use only positive indices.[m
     [m
     % calculate a moving average of the eye position for display reasons[m
[31m-    p.trial.eyeX   = p.trial.eyeCalib.gain(1) * (prctile(p.trial.AI.Eye.X(sIdx), 50) - p.trial.eyeCalib.offset(1));[m
[31m-    p.trial.eyeY   = p.trial.eyeCalib.gain(2) * (prctile(p.trial.AI.Eye.Y(sIdx), 50) - p.trial.eyeCalib.offset(2));[m
[32m+[m[32m    p.trial.eyeX = p.trial.eyeCalib.gain(1) * (prctile(p.trial.AI.Eye.X(sIdx), 50) - p.trial.eyeCalib.offset(1));[m
[32m+[m[32m    p.trial.eyeY = p.trial.eyeCalib.gain(2) * (prctile(p.trial.AI.Eye.Y(sIdx), 50) - p.trial.eyeCalib.offset(2));[m
 [m
 else[m
     % If neither option is enabled just fix the eyepos at 0,0[m
[1mdiff --git a/utils/ND_CheckKey.m b/utils/ND_CheckKey.m[m
[1mindex d4903d3..a4381a3 100644[m
[1m--- a/utils/ND_CheckKey.m[m
[1m+++ b/utils/ND_CheckKey.m[m
[36m@@ -46,6 +46,7 @@[m [mif(any(p.trial.keyboard.firstPressQ))  % this only checks the first pressed key[m
             %% reward[m
             % check for manual reward delivery via keyboard[m
                 pds.reward.give(p, p.trial.reward.ManDur);  % per default, output will be channel three.[m
[32m+[m[32m                ND_CtrlMsg(p, 'Click... Reward delivered.');[m
 [m
             % ----------------------------------------------------------------%[m
             case p.trial.key.FixInc[m
[36m@@ -111,6 +112,8 @@[m [mif(any(p.trial.keyboard.firstPressQ))  % this only checks the first pressed key[m
                 else[m
                     p.trial.Block.GenBlock = 1;[m
                 end[m
[32m+[m[41m                [m
[32m+[m[32m                ND_CtrlMsg(p, 'Advanced to next Block');[m
 [m
             % ----------------------------------------------------------------%[m
             case p.trial.key.BlockEqualCorrect[m
[36m@@ -131,6 +134,7 @@[m [mif(any(p.trial.keyboard.firstPressQ))  % this only checks the first pressed key[m
                                p.trial.datapixx.TTL_spritzerNpulse,  p.trial.datapixx.TTL_spritzerPulseGap,  ...[m
                                p.trial.datapixx.TTL_spritzerNseries, p.trial.datapixx.TTL_spritzerSeriesGap, ...[m
                                p.trial.event.INJECT);[m
[32m+[m[32m                ND_CtrlMsg(p, 'Trigger for drug delivery issued!');[m
 [m
             % ----------------------------------------------------------------%[m
             case p.trial.key.pause[m
[1mdiff --git a/utils/ND_CheckMouse.m b/utils/ND_CheckMouse.m[m
[1mindex 6c08538..a1251ec 100644[m
[1m--- a/utils/ND_CheckMouse.m[m
[1m+++ b/utils/ND_CheckMouse.m[m
[36m@@ -9,7 +9,7 @@[m [mfunction p = ND_CheckMouse(p)[m
 [m
 [cursorX, cursorY,buttons] = GetMouse();[m
 [m
[31m-iSamples =    p.trial.mouse.samples+1;[m
[32m+[m[32miSamples = p.trial.mouse.samples+1;[m
 p.trial.mouse.samples = iSamples;[m
 p.trial.mouse.samplesTimes(iSamples) = GetSecs;[m
 [m
[36m@@ -20,7 +20,6 @@[m [mp.trial.mouse.cursorPxSamples(:, iSamples) = [cursorX; cursorY];[m
 p.trial.mouse.cursorSamples(:, iSamples) = px2screen(p, cursorX, cursorY);[m
 [m
 %% Process Mouse buttons[m
[31m-[m
 % First get the state of the current buttons, and store it in the history[m
 p.trial.mouse.buttons = buttons;[m
 p.trial.mouse.buttonPressSamples( :, iSamples) = buttons';[m
[36m@@ -31,6 +30,6 @@[m [mlastButtons = p.trial.mouse.buttonPressSamples(:, max(iSamples - 1, 1));[m
 p.trial.mouse.newButtons = buttons' - lastButtons;[m
 [m
 % If a new button has been pressed, redraw figures in case clicking occurs on the figures and that is a defined action[m
[31m-if any(p.trial.mouse.newButtons) && p.trial.plot.do_online[m
[31m-    drawnow[m
[32m+[m[32mif(any(p.trial.mouse.newButtons) && p.trial.plot.do_online)[m
[32m+[m[32m    drawnow;[m
 end[m
[1mdiff --git a/utils/ND_LoadCondition.m b/utils/ND_LoadCondition.m[m
[1mindex b8cd4f6..777c6d1 100644[m
[1m--- a/utils/ND_LoadCondition.m[m
[1m+++ b/utils/ND_LoadCondition.m[m
[36m@@ -4,7 +4,7 @@[m [mfunction p = ND_LoadCondition(p)[m
 [m
 % Nate Faber, Oct 2017[m
 iTrial = p.defaultParameters.pldaps.iTrial;[m
[31m-cond = p.conditions{iTrial};[m
[32m+[m[32mcond   = p.conditions{iTrial};[m
 [m
 p.defaultParameters = ND_AlterSubStruct(p.defaultParameters, cond);[m
 [m
